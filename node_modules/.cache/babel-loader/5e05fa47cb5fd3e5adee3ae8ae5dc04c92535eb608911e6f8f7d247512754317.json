{"ast":null,"code":"var _jsxFileName = \"/home/rasoul/Documents/Project/React/myapp/src/App.js\",\n  _s = $RefreshSig$();\nimport { Profiler, useLayoutEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [number, setNumber] = useState(0);\n  const [divStyle, setDivStyle] = useState({});\n  const sectionRef = useRef();\n  const numberUpdateLogs = () => {\n    console.log('number update');\n  };\n  useLayoutEffect(() => {\n    const randomValue = Math.floor(Math.random() * 500);\n    for (let index = 0; index <= 1000000; index++) {\n      if (index === 1000000) {\n        setDivStyle({\n          paddingTop: `${randomValue}px`\n        });\n      }\n    }\n  }, [number]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      ref: sectionRef,\n      style: divStyle,\n      children: [/*#__PURE__*/_jsxDEV(Profiler, {\n        id: \"Number-p-Tag\",\n        onRender: numberUpdateLogs,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setNumber(prevNumber => prevNumber - 1),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setNumber(prevNumber => prevNumber + 1),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"K/WB1UbInc6koEL9H1Z++g9w/nA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Profiler","useLayoutEffect","useRef","useState","jsxDEV","_jsxDEV","App","_s","number","setNumber","divStyle","setDivStyle","sectionRef","numberUpdateLogs","console","log","randomValue","Math","floor","random","index","paddingTop","className","children","ref","style","id","onRender","fileName","_jsxFileName","lineNumber","columnNumber","onClick","prevNumber","_c","$RefreshReg$"],"sources":["/home/rasoul/Documents/Project/React/myapp/src/App.js"],"sourcesContent":["import { Profiler, useLayoutEffect, useRef, useState } from \"react\";\n\nconst App = () => {\n    const [number, setNumber] = useState(0);\n\n    const [divStyle, setDivStyle] = useState({});\n\n    const sectionRef = useRef();\n\n    const numberUpdateLogs = () => {\n        console.log('number update');\n    }\n\n    useLayoutEffect(() => {\n        const randomValue = Math.floor(Math.random() * 500);\n        for (let index = 0; index <= 1000000; index++) {\n            if (index === 1000000) {\n                setDivStyle({ paddingTop: `${randomValue}px` });\n            }\n        }\n    }, [number]);\n\n    return (\n        <main className=\"App\">\n            <section ref={sectionRef} style={divStyle}>\n                <Profiler id=\"Number-p-Tag\" onRender={numberUpdateLogs}>\n                    <p>{number}</p>\n                </Profiler>\n                <div>\n                    <button\n                        onClick={() =>\n                            setNumber((prevNumber) => prevNumber - 1)\n                        }\n                    >\n                        -\n                    </button>\n                    <button\n                        onClick={() =>\n                            setNumber((prevNumber) => prevNumber + 1)\n                        }\n                    >\n                        +\n                    </button>\n                </div>\n            </section>\n        </main>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,eAAe,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAEvC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5C,MAAMS,UAAU,GAAGV,MAAM,CAAC,CAAC;EAE3B,MAAMW,gBAAgB,GAAGA,CAAA,KAAM;IAC3BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAChC,CAAC;EAEDd,eAAe,CAAC,MAAM;IAClB,MAAMe,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IACnD,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,IAAI,OAAO,EAAEA,KAAK,EAAE,EAAE;MAC3C,IAAIA,KAAK,KAAK,OAAO,EAAE;QACnBT,WAAW,CAAC;UAAEU,UAAU,EAAG,GAAEL,WAAY;QAAI,CAAC,CAAC;MACnD;IACJ;EACJ,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZ,oBACIH,OAAA;IAAMiB,SAAS,EAAC,KAAK;IAAAC,QAAA,eACjBlB,OAAA;MAASmB,GAAG,EAAEZ,UAAW;MAACa,KAAK,EAAEf,QAAS;MAAAa,QAAA,gBACtClB,OAAA,CAACL,QAAQ;QAAC0B,EAAE,EAAC,cAAc;QAACC,QAAQ,EAAEd,gBAAiB;QAAAU,QAAA,eACnDlB,OAAA;UAAAkB,QAAA,EAAIf;QAAM;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACX1B,OAAA;QAAAkB,QAAA,gBACIlB,OAAA;UACI2B,OAAO,EAAEA,CAAA,KACLvB,SAAS,CAAEwB,UAAU,IAAKA,UAAU,GAAG,CAAC,CAC3C;UAAAV,QAAA,EACJ;QAED;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1B,OAAA;UACI2B,OAAO,EAAEA,CAAA,KACLvB,SAAS,CAAEwB,UAAU,IAAKA,UAAU,GAAG,CAAC,CAC3C;UAAAV,QAAA,EACJ;QAED;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEf,CAAC;AAACxB,EAAA,CA7CID,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA+CT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}